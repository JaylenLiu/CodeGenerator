<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaylen.codegenerator.dao.AgileComponentMapper">
  <resultMap id="BaseResultMap" type="cn.jaylen.codegenerator.entity.AgileComponent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="entity_id" jdbcType="BIGINT" property="entityId" />
    <result column="keyname_id" jdbcType="BIGINT" property="keynameId" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
    <result column="component_type" jdbcType="VARCHAR" property="componentType" />
    <result column="placeholder" jdbcType="VARCHAR" property="placeholder" />
    <result column="is_disabled" jdbcType="BIT" property="isDisabled" />
    <result column="is_visibled" jdbcType="BIT" property="isVisibled" />
    <result column="is_required" jdbcType="BIT" property="isRequired" />
    <result column="is_query" jdbcType="BIT" property="isQuery" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, entity_id, keyname_id, field_name, label, default_value, component_type, placeholder,
    is_disabled, is_visibled, is_required, is_query, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.jaylen.codegenerator.entity.example.AgileComponentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agile_component
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from agile_component
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from agile_component
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaylen.codegenerator.entity.example.AgileComponentExample">
    delete from agile_component
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.jaylen.codegenerator.entity.AgileComponent">
    insert into agile_component (id, entity_id, keyname_id,
    field_name, label, default_value,
    component_type, placeholder, is_disabled,
    is_visibled, is_required, is_query,
    create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{entityId,jdbcType=BIGINT}, #{keynameId,jdbcType=BIGINT},
    #{fieldName,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR},
    #{componentType,jdbcType=VARCHAR}, #{placeholder,jdbcType=VARCHAR}, #{isDisabled,jdbcType=BIT},
    #{isVisibled,jdbcType=BIT}, #{isRequired,jdbcType=BIT}, #{isQuery,jdbcType=BIT},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.jaylen.codegenerator.entity.AgileComponent">
    insert into agile_component
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="entityId != null">
        entity_id,
      </if>
      <if test="keynameId != null">
        keyname_id,
      </if>
      <if test="fieldName != null">
        field_name,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="defaultValue != null">
        default_value,
      </if>
      <if test="componentType != null">
        component_type,
      </if>
      <if test="placeholder != null">
        placeholder,
      </if>
      <if test="isDisabled != null">
        is_disabled,
      </if>
      <if test="isVisibled != null">
        is_visibled,
      </if>
      <if test="isRequired != null">
        is_required,
      </if>
      <if test="isQuery != null">
        is_query,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="entityId != null">
        #{entityId,jdbcType=BIGINT},
      </if>
      <if test="keynameId != null">
        #{keynameId,jdbcType=BIGINT},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="componentType != null">
        #{componentType,jdbcType=VARCHAR},
      </if>
      <if test="placeholder != null">
        #{placeholder,jdbcType=VARCHAR},
      </if>
      <if test="isDisabled != null">
        #{isDisabled,jdbcType=BIT},
      </if>
      <if test="isVisibled != null">
        #{isVisibled,jdbcType=BIT},
      </if>
      <if test="isRequired != null">
        #{isRequired,jdbcType=BIT},
      </if>
      <if test="isQuery != null">
        #{isQuery,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaylen.codegenerator.entity.example.AgileComponentExample" resultType="java.lang.Long">
    select count(*) from agile_component
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agile_component
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.entityId != null">
        entity_id = #{record.entityId,jdbcType=BIGINT},
      </if>
      <if test="record.keynameId != null">
        keyname_id = #{record.keynameId,jdbcType=BIGINT},
      </if>
      <if test="record.fieldName != null">
        field_name = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null">
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.componentType != null">
        component_type = #{record.componentType,jdbcType=VARCHAR},
      </if>
      <if test="record.placeholder != null">
        placeholder = #{record.placeholder,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisabled != null">
        is_disabled = #{record.isDisabled,jdbcType=BIT},
      </if>
      <if test="record.isVisibled != null">
        is_visibled = #{record.isVisibled,jdbcType=BIT},
      </if>
      <if test="record.isRequired != null">
        is_required = #{record.isRequired,jdbcType=BIT},
      </if>
      <if test="record.isQuery != null">
        is_query = #{record.isQuery,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agile_component
    set id = #{record.id,jdbcType=BIGINT},
    entity_id = #{record.entityId,jdbcType=BIGINT},
    keyname_id = #{record.keynameId,jdbcType=BIGINT},
    field_name = #{record.fieldName,jdbcType=VARCHAR},
    label = #{record.label,jdbcType=VARCHAR},
    default_value = #{record.defaultValue,jdbcType=VARCHAR},
    component_type = #{record.componentType,jdbcType=VARCHAR},
    placeholder = #{record.placeholder,jdbcType=VARCHAR},
    is_disabled = #{record.isDisabled,jdbcType=BIT},
    is_visibled = #{record.isVisibled,jdbcType=BIT},
    is_required = #{record.isRequired,jdbcType=BIT},
    is_query = #{record.isQuery,jdbcType=BIT},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaylen.codegenerator.entity.AgileComponent">
    update agile_component
    <set>
      <if test="entityId != null">
        entity_id = #{entityId,jdbcType=BIGINT},
      </if>
      <if test="keynameId != null">
        keyname_id = #{keynameId,jdbcType=BIGINT},
      </if>
      <if test="fieldName != null">
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="componentType != null">
        component_type = #{componentType,jdbcType=VARCHAR},
      </if>
      <if test="placeholder != null">
        placeholder = #{placeholder,jdbcType=VARCHAR},
      </if>
      <if test="isDisabled != null">
        is_disabled = #{isDisabled,jdbcType=BIT},
      </if>
      <if test="isVisibled != null">
        is_visibled = #{isVisibled,jdbcType=BIT},
      </if>
      <if test="isRequired != null">
        is_required = #{isRequired,jdbcType=BIT},
      </if>
      <if test="isQuery != null">
        is_query = #{isQuery,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaylen.codegenerator.entity.AgileComponent">
    update agile_component
    set entity_id = #{entityId,jdbcType=BIGINT},
      keyname_id = #{keynameId,jdbcType=BIGINT},
      field_name = #{fieldName,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      component_type = #{componentType,jdbcType=VARCHAR},
      placeholder = #{placeholder,jdbcType=VARCHAR},
      is_disabled = #{isDisabled,jdbcType=BIT},
      is_visibled = #{isVisibled,jdbcType=BIT},
      is_required = #{isRequired,jdbcType=BIT},
      is_query = #{isQuery,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>