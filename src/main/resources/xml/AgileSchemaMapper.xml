<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaylen.codegenerator.dao.AgileSchemaMapper">
  <resultMap id="BaseResultMap" type="cn.jaylen.codegenerator.entity.AgileSchema">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="schema_name" jdbcType="VARCHAR" property="schemaName" />
    <result column="module_name" jdbcType="VARCHAR" property="moduleName" />
    <result column="module_desc" jdbcType="VARCHAR" property="moduleDesc" />
    <result column="package_path" jdbcType="VARCHAR" property="packagePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, schema_name, module_name, module_desc, package_path, create_time, update_time, 
    remark
  </sql>
  <select id="selectByExample" parameterType="cn.jaylen.codegenerator.entity.example.AgileSchemaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from agile_schema
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from agile_schema
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from agile_schema
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaylen.codegenerator.entity.example.AgileSchemaExample">
    delete from agile_schema
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.jaylen.codegenerator.entity.AgileSchema">
    insert into agile_schema (id, schema_name, module_name, 
      module_desc, package_path, create_time, 
      update_time, remark)
    values (#{id,jdbcType=BIGINT}, #{schemaName,jdbcType=VARCHAR}, #{moduleName,jdbcType=VARCHAR}, 
      #{moduleDesc,jdbcType=VARCHAR}, #{packagePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.jaylen.codegenerator.entity.AgileSchema">
    insert into agile_schema
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="schemaName != null">
        schema_name,
      </if>
      <if test="moduleName != null">
        module_name,
      </if>
      <if test="moduleDesc != null">
        module_desc,
      </if>
      <if test="packagePath != null">
        package_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="schemaName != null">
        #{schemaName,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null">
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleDesc != null">
        #{moduleDesc,jdbcType=VARCHAR},
      </if>
      <if test="packagePath != null">
        #{packagePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaylen.codegenerator.entity.example.AgileSchemaExample" resultType="java.lang.Long">
    select count(*) from agile_schema
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update agile_schema
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.schemaName != null">
        schema_name = #{record.schemaName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleName != null">
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleDesc != null">
        module_desc = #{record.moduleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.packagePath != null">
        package_path = #{record.packagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update agile_schema
    set id = #{record.id,jdbcType=BIGINT},
      schema_name = #{record.schemaName,jdbcType=VARCHAR},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      module_desc = #{record.moduleDesc,jdbcType=VARCHAR},
      package_path = #{record.packagePath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaylen.codegenerator.entity.AgileSchema">
    update agile_schema
    <set>
      <if test="schemaName != null">
        schema_name = #{schemaName,jdbcType=VARCHAR},
      </if>
      <if test="moduleName != null">
        module_name = #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleDesc != null">
        module_desc = #{moduleDesc,jdbcType=VARCHAR},
      </if>
      <if test="packagePath != null">
        package_path = #{packagePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaylen.codegenerator.entity.AgileSchema">
    update agile_schema
    set schema_name = #{schemaName,jdbcType=VARCHAR},
      module_name = #{moduleName,jdbcType=VARCHAR},
      module_desc = #{moduleDesc,jdbcType=VARCHAR},
      package_path = #{packagePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>