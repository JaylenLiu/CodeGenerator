package ${packagePath}.service.impl;
## 类名首字母大写
#set($upperClassName = $className.substring(0,1).toUpperCase()+ $className.substring(1))
## 类名首字母小写
#set($lowerClassName = $className.substring(0,1).toLowerCase()+ $className.substring(1))
import ${packagePath}.base.BaseServiceImpl;
import ${packagePath}.dao.${upperClassName}Mapper;
import ${packagePath}.entity.${upperClassName};
import ${packagePath}.common.Message;
import ${packagePath}.entity.${upperClassName}Example;
import ${packagePath}.service.${upperClassName}Service;
import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ${packagePath}.util.PageUtil;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import java.util.Arrays;
import java.util.List;

@Service
public class ${upperClassName}ServiceImpl extends BaseServiceImpl<${upperClassName}> implements ${upperClassName}Service {
    @Resource
    ${upperClassName}Mapper ${lowerClassName}Mapper;

    private Logger logger = LoggerFactory.getLogger(${upperClassName}ServiceImpl.class);

    @Override
    public List<${upperClassName}> selectAll(){
        ${upperClassName}Example example = new ${upperClassName}Example();
        return ${lowerClassName}Mapper.selectByExample(example);
    }

    @Override
    public Message selectByPages(){
        // 获取分页信息
        PageHelper.startPage(PageUtil.getPageNum(), PageUtil.getPageSize());
        List<${upperClassName}> result;
        try {
            result = selectAll();
        } catch (Exception e) {
            logger.error("获取${upperClassName}信息失败}！", e);
            return Message.errorMessage(500, "获取${upperClassName}信息失败！");
        }

        PageInfo pageInfo = new PageInfo(result);
        Message<${upperClassName}> message = Message.successMessage(result);
        message.setPages(pageInfo.getPages());
        return message;
    }

    @Override
    public int deleteByIDs(Integer[] ids){
        ${upperClassName}Example example = new ${upperClassName}Example();
        example.createCriteria().andIdIn(Arrays.asList(ids));
        return ${lowerClassName}Mapper.deleteByExample(example);
    }
}
